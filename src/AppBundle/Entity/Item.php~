<?php
/**
 * Created by PhpStorm.
 * User: marko
 * Date: 8.7.17.
 * Time: 20.58
 */

namespace AppBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * @ORM\Entity
 * @ORM\Table(name="item")
 */
class Item
{
    /**
     * @ORM\Column(type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $item_id;
    /**
     * @ORM\ManyToOne(targetEntity="Marker", inversedBy="items")
     * @ORM\JoinColumn(name="marker_id", referencedColumnName="marker_id")
     */
    private $marker;
    /**
     * @ORM\Column(type="string")
     * @Assert\NotBlank()
     */
    private $description;
    /**
     * @ORM\Column(type="string")
     */
    private $image_url;
    /**
     * @Assert\File(
     *     maxSize = "1M",
     *     mimeTypes = {"image/jpeg", "image/png"},
     *     mimeTypesMessage = "Please upload jpg or png image up to 1 MB."
     * )
     */
    private $image;

    /**
     * Get itemId
     *
     * @return integer
     */
    public function getItemId()
    {
        return $this->item_id;
    }

    /**
     * Set markerId
     *
     * @param integer $markerId
     *
     * @return Item
     */
    public function setMarkerId($markerId)
    {
        $this->marker_id = $markerId;

        return $this;
    }

    /**
     * Get markerId
     *
     * @return integer
     */
    public function getMarkerId()
    {
        return $this->marker_id;
    }

    /**
     * Set description
     *
     * @param string $description
     *
     * @return Item
     */
    public function setDescription($description)
    {
        $this->description = $description;

        return $this;
    }

    /**
     * Get description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Set imageUrl
     *
     * @param string $imageUrl
     *
     * @return Item
     */
    public function setImageUrl($imageUrl)
    {
        $this->image_url = $imageUrl;

        return $this;
    }

    /**
     * Get imageUrl
     *
     * @return string
     */
    public function getImageUrl()
    {
        return $this->image_url;
    }
}
